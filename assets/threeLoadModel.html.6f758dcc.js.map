{"version":3,"file":"threeLoadModel.html.6f758dcc.js","sources":["../../../../node_modules/three/examples/jsm/loaders/OBJLoader.js","../../../../node_modules/three/examples/jsm/loaders/MTLLoader.js","../../../components/fantastic/threeLoadModel.vue"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n","import {\n\tColor,\n\tDefaultLoadingManager,\n\tFileLoader,\n\tFrontSide,\n\tLoader,\n\tLoaderUtils,\n\tMeshPhongMaterial,\n\tRepeatWrapping,\n\tTextureLoader,\n\tVector2,\n\tsRGBEncoding\n} from 'three';\n\n/**\n * Loads a Wavefront .mtl file specifying materials\n */\n\nclass MTLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\t/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterialOptions( value ) {\n\n\t\tthis.materialOptions = value;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */\n\tparse( text, path ) {\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet info = {};\n\t\tconst delimiter_pattern = /\\s+/;\n\t\tconst materialsInfo = {};\n\n\t\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlet line = lines[ i ];\n\t\t\tline = line.trim();\n\n\t\t\tif ( line.length === 0 || line.charAt( 0 ) === '#' ) {\n\n\t\t\t\t// Blank line or comment ignore\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst pos = line.indexOf( ' ' );\n\n\t\t\tlet key = ( pos >= 0 ) ? line.substring( 0, pos ) : line;\n\t\t\tkey = key.toLowerCase();\n\n\t\t\tlet value = ( pos >= 0 ) ? line.substring( pos + 1 ) : '';\n\t\t\tvalue = value.trim();\n\n\t\t\tif ( key === 'newmtl' ) {\n\n\t\t\t\t// New material\n\n\t\t\t\tinfo = { name: value };\n\t\t\t\tmaterialsInfo[ value ] = info;\n\n\t\t\t} else {\n\n\t\t\t\tif ( key === 'ka' || key === 'kd' || key === 'ks' || key === 'ke' ) {\n\n\t\t\t\t\tconst ss = value.split( delimiter_pattern, 3 );\n\t\t\t\t\tinfo[ key ] = [ parseFloat( ss[ 0 ] ), parseFloat( ss[ 1 ] ), parseFloat( ss[ 2 ] ) ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinfo[ key ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst materialCreator = new MaterialCreator( this.resourcePath || path, this.materialOptions );\n\t\tmaterialCreator.setCrossOrigin( this.crossOrigin );\n\t\tmaterialCreator.setManager( this.manager );\n\t\tmaterialCreator.setMaterials( materialsInfo );\n\t\treturn materialCreator;\n\n\t}\n\n}\n\n/**\n * Create a new MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */\n\nclass MaterialCreator {\n\n\tconstructor( baseUrl = '', options = {} ) {\n\n\t\tthis.baseUrl = baseUrl;\n\t\tthis.options = options;\n\t\tthis.materialsInfo = {};\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t\tthis.crossOrigin = 'anonymous';\n\n\t\tthis.side = ( this.options.side !== undefined ) ? this.options.side : FrontSide;\n\t\tthis.wrap = ( this.options.wrap !== undefined ) ? this.options.wrap : RepeatWrapping;\n\n\t}\n\n\tsetCrossOrigin( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t}\n\n\tsetManager( value ) {\n\n\t\tthis.manager = value;\n\n\t}\n\n\tsetMaterials( materialsInfo ) {\n\n\t\tthis.materialsInfo = this.convert( materialsInfo );\n\t\tthis.materials = {};\n\t\tthis.materialsArray = [];\n\t\tthis.nameLookup = {};\n\n\t}\n\n\tconvert( materialsInfo ) {\n\n\t\tif ( ! this.options ) return materialsInfo;\n\n\t\tconst converted = {};\n\n\t\tfor ( const mn in materialsInfo ) {\n\n\t\t\t// Convert materials info into normalized form based on options\n\n\t\t\tconst mat = materialsInfo[ mn ];\n\n\t\t\tconst covmat = {};\n\n\t\t\tconverted[ mn ] = covmat;\n\n\t\t\tfor ( const prop in mat ) {\n\n\t\t\t\tlet save = true;\n\t\t\t\tlet value = mat[ prop ];\n\t\t\t\tconst lprop = prop.toLowerCase();\n\n\t\t\t\tswitch ( lprop ) {\n\n\t\t\t\t\tcase 'kd':\n\t\t\t\t\tcase 'ka':\n\t\t\t\t\tcase 'ks':\n\n\t\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\t\tif ( this.options && this.options.normalizeRGB ) {\n\n\t\t\t\t\t\t\tvalue = [ value[ 0 ] / 255, value[ 1 ] / 255, value[ 2 ] / 255 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( this.options && this.options.ignoreZeroRGBs ) {\n\n\t\t\t\t\t\t\tif ( value[ 0 ] === 0 && value[ 1 ] === 0 && value[ 2 ] === 0 ) {\n\n\t\t\t\t\t\t\t\t// ignore\n\n\t\t\t\t\t\t\t\tsave = false;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( save ) {\n\n\t\t\t\t\tcovmat[ lprop ] = value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn converted;\n\n\t}\n\n\tpreload() {\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.create( mn );\n\n\t\t}\n\n\t}\n\n\tgetIndex( materialName ) {\n\n\t\treturn this.nameLookup[ materialName ];\n\n\t}\n\n\tgetAsArray() {\n\n\t\tlet index = 0;\n\n\t\tfor ( const mn in this.materialsInfo ) {\n\n\t\t\tthis.materialsArray[ index ] = this.create( mn );\n\t\t\tthis.nameLookup[ mn ] = index;\n\t\t\tindex ++;\n\n\t\t}\n\n\t\treturn this.materialsArray;\n\n\t}\n\n\tcreate( materialName ) {\n\n\t\tif ( this.materials[ materialName ] === undefined ) {\n\n\t\t\tthis.createMaterial_( materialName );\n\n\t\t}\n\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tcreateMaterial_( materialName ) {\n\n\t\t// Create material\n\n\t\tconst scope = this;\n\t\tconst mat = this.materialsInfo[ materialName ];\n\t\tconst params = {\n\n\t\t\tname: materialName,\n\t\t\tside: this.side\n\n\t\t};\n\n\t\tfunction resolveURL( baseUrl, url ) {\n\n\t\t\tif ( typeof url !== 'string' || url === '' )\n\t\t\t\treturn '';\n\n\t\t\t// Absolute URL\n\t\t\tif ( /^https?:\\/\\//i.test( url ) ) return url;\n\n\t\t\treturn baseUrl + url;\n\n\t\t}\n\n\t\tfunction setMapForType( mapType, value ) {\n\n\t\t\tif ( params[ mapType ] ) return; // Keep the first encountered texture\n\n\t\t\tconst texParams = scope.getTextureParams( value, params );\n\t\t\tconst map = scope.loadTexture( resolveURL( scope.baseUrl, texParams.url ) );\n\n\t\t\tmap.repeat.copy( texParams.scale );\n\t\t\tmap.offset.copy( texParams.offset );\n\n\t\t\tmap.wrapS = scope.wrap;\n\t\t\tmap.wrapT = scope.wrap;\n\n\t\t\tif ( mapType === 'map' || mapType === 'emissiveMap' ) {\n\n\t\t\t\tmap.encoding = sRGBEncoding;\n\n\t\t\t}\n\n\t\t\tparams[ mapType ] = map;\n\n\t\t}\n\n\t\tfor ( const prop in mat ) {\n\n\t\t\tconst value = mat[ prop ];\n\t\t\tlet n;\n\n\t\t\tif ( value === '' ) continue;\n\n\t\t\tswitch ( prop.toLowerCase() ) {\n\n\t\t\t\t// Ns is material specular exponent\n\n\t\t\t\tcase 'kd':\n\n\t\t\t\t\t// Diffuse color (color under white light) using RGB values\n\n\t\t\t\t\tparams.color = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ks':\n\n\t\t\t\t\t// Specular color (color when light is reflected from shiny surface) using RGB values\n\t\t\t\t\tparams.specular = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ke':\n\n\t\t\t\t\t// Emissive using RGB values\n\t\t\t\t\tparams.emissive = new Color().fromArray( value ).convertSRGBToLinear();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_kd':\n\n\t\t\t\t\t// Diffuse texture map\n\n\t\t\t\t\tsetMapForType( 'map', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ks':\n\n\t\t\t\t\t// Specular map\n\n\t\t\t\t\tsetMapForType( 'specularMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_ke':\n\n\t\t\t\t\t// Emissive map\n\n\t\t\t\t\tsetMapForType( 'emissiveMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'norm':\n\n\t\t\t\t\tsetMapForType( 'normalMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_bump':\n\t\t\t\tcase 'bump':\n\n\t\t\t\t\t// Bump texture map\n\n\t\t\t\t\tsetMapForType( 'bumpMap', value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map_d':\n\n\t\t\t\t\t// Alpha map\n\n\t\t\t\t\tsetMapForType( 'alphaMap', value );\n\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ns':\n\n\t\t\t\t\t// The specular exponent (defines the focus of the specular highlight)\n\t\t\t\t\t// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n\t\t\t\t\tparams.shininess = parseFloat( value );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'd':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( n < 1 ) {\n\n\t\t\t\t\t\tparams.opacity = n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'tr':\n\t\t\t\t\tn = parseFloat( value );\n\n\t\t\t\t\tif ( this.options && this.options.invertTrProperty ) n = 1 - n;\n\n\t\t\t\t\tif ( n > 0 ) {\n\n\t\t\t\t\t\tparams.opacity = 1 - n;\n\t\t\t\t\t\tparams.transparent = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.materials[ materialName ] = new MeshPhongMaterial( params );\n\t\treturn this.materials[ materialName ];\n\n\t}\n\n\tgetTextureParams( value, matParams ) {\n\n\t\tconst texParams = {\n\n\t\t\tscale: new Vector2( 1, 1 ),\n\t\t\toffset: new Vector2( 0, 0 )\n\n\t\t };\n\n\t\tconst items = value.split( /\\s+/ );\n\t\tlet pos;\n\n\t\tpos = items.indexOf( '-bm' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\tmatParams.bumpScale = parseFloat( items[ pos + 1 ] );\n\t\t\titems.splice( pos, 2 );\n\n\t\t}\n\n\t\tpos = items.indexOf( '-s' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.scale.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\tpos = items.indexOf( '-o' );\n\n\t\tif ( pos >= 0 ) {\n\n\t\t\ttexParams.offset.set( parseFloat( items[ pos + 1 ] ), parseFloat( items[ pos + 2 ] ) );\n\t\t\titems.splice( pos, 4 ); // we expect 3 parameters here!\n\n\t\t}\n\n\t\ttexParams.url = items.join( ' ' ).trim();\n\t\treturn texParams;\n\n\t}\n\n\tloadTexture( url, mapping, onLoad, onProgress, onError ) {\n\n\t\tconst manager = ( this.manager !== undefined ) ? this.manager : DefaultLoadingManager;\n\t\tlet loader = manager.getHandler( url );\n\n\t\tif ( loader === null ) {\n\n\t\t\tloader = new TextureLoader( manager );\n\n\t\t}\n\n\t\tif ( loader.setCrossOrigin ) loader.setCrossOrigin( this.crossOrigin );\n\n\t\tconst texture = loader.load( url, onLoad, onProgress, onError );\n\n\t\tif ( mapping !== undefined ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t}\n\n}\n\nexport { MTLLoader };\n","<script lang=\"ts\" setup>\n//@ts-ignore\nimport { ref, nextTick } from \"vue\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader.js';\n\nconst container = ref(null);\nconst canvasItem = ref(null);\n\nfunction main() {\n  const canvas =  canvasItem.value;\n  const renderer = new THREE.WebGLRenderer({canvas});\n  renderer.outputEncoding = THREE.sRGBEncoding;\n\n  const fov = 45;\n  const aspect = 2;  // the canvas default\n  const near = 0.1;\n  const far = 100;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.set(10, 10, 20);\n\n  const controls = new OrbitControls(camera, canvas);\n  controls.target.set(0, 5, 0);\n  controls.update();\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color('pink');\n\n  {\n    const planeSize = 50;\n\n    const loader = new THREE.TextureLoader();\n    const texture = loader.load('/note/images/logo.jpg');\n    texture.encoding = THREE.sRGBEncoding;\n    texture.wrapS = THREE.RepeatWrapping;\n    texture.wrapT = THREE.RepeatWrapping;\n    texture.magFilter = THREE.NearestFilter;\n    const repeats = planeSize / 2;\n    texture.repeat.set(repeats, repeats);\n\n    const planeGeo = new THREE.PlaneGeometry(planeSize, planeSize);\n    const planeMat = new THREE.MeshPhongMaterial({\n      map: texture,\n      side: THREE.DoubleSide,\n    });\n    const mesh = new THREE.Mesh(planeGeo, planeMat);\n    mesh.rotation.x = Math.PI * -.5;\n    scene.add(mesh);\n  }\n\n  {\n    const skyColor = 0xB1E1FF;  // light blue\n    const groundColor = 0xB97A20;  // brownish orange\n    const intensity = 1;\n    const light = new THREE.HemisphereLight(skyColor, groundColor, intensity);\n    scene.add(light);\n  }\n\n  {\n    const color = 0xFFFFFF;\n    const intensity = 1;\n    const light = new THREE.DirectionalLight(color, intensity);\n    light.position.set(5, 10, 2);\n    scene.add(light);\n    scene.add(light.target);\n  }\n\n  {\n    const mtlLoader = new MTLLoader();\n    mtlLoader.load('/note/model/diaona.mtl', (mtl) => {\n      mtl.preload();\n      const objLoader = new OBJLoader();\n      objLoader.setMaterials(mtl);\n      objLoader.load('/note/model/diaona.obj', (root) => {\n\n        root.scale.set(0.1,0.1,0.1)\n        console.log(root)\n        root.rotateY(3)\n        scene.add(root);\n      });\n    });\n  }\n\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = container?.value?.clientWidth|| canvas.clientWidth;\n    const height = container?.value?.clientHeight||canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) {\n      renderer.setSize(width, height, false);\n    }\n    return needResize;\n  }\n\n  function render() {\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n    renderer.render(scene, camera);\n    requestAnimationFrame(render);\n  }\n  requestAnimationFrame(render);\n}\n\nnextTick(() => {\n    main();\n})\n</script>\n\n<template>\n  <div class=\"fullscreen\" ref=\"container\">\n      <canvas ref=\"canvasItem\"></canvas>\n  </div>\n</template>"],"names":["_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","Vector3","_vB","_vC","_ab","_cb","_color","Color","ParserState","state","name","fromDeclaration","previousMaterial","libraries","previous","material","index","cloned","end","lastMultiMaterial","mi","declared","value","len","a","b","c","src","dst","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","vertices","vi","l","uvs","uvi","OBJLoader","Loader","manager","url","onLoad","onProgress","onError","scope","loader","FileLoader","text","e","materials","lines","result","i","line","lineFirstChar","data","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","lineVertices","lineUVs","li","llen","parts","pointData","container","Group","object","geometry","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","LineBasicMaterial","materialLine","Material","PointsMaterial","materialPoints","MeshPhongMaterial","mesh","LineSegments","Points","Mesh","points","MTLLoader","path","LoaderUtils","info","delimiter_pattern","materialsInfo","pos","key","ss","materialCreator","MaterialCreator","baseUrl","options","FrontSide","RepeatWrapping","converted","mn","mat","covmat","prop","save","lprop","materialName","params","resolveURL","setMapForType","mapType","texParams","map","sRGBEncoding","n","matParams","Vector2","items","mapping","DefaultLoadingManager","TextureLoader","texture","ref","canvasItem","main","canvas","renderer","THREE.WebGLRenderer","THREE.sRGBEncoding","fov","aspect","near","far","camera","THREE.PerspectiveCamera","controls","OrbitControls","scene","THREE.Scene","THREE.Color","THREE.TextureLoader","THREE.RepeatWrapping","THREE.NearestFilter","repeats","planeGeo","THREE.PlaneGeometry","planeMat","THREE.MeshPhongMaterial","THREE.DoubleSide","THREE.Mesh","light","THREE.HemisphereLight","THREE.DirectionalLight","mtl","objLoader","root","resizeRendererToDisplaySize","renderer2","canvas2","width","_a","height","_b","needResize","render","nextTick"],"mappings":"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"}