{"version":3,"file":"usingClamp.html.37adb1d6.js","sources":["../../../components/glsl/practice.clamp.vue"],"sourcesContent":["<template>\n    <div class=\"practice fullscreen\" ref=\"container\">\n    </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport Sketch from \"@scripts/practice.setup.ts\";\nimport * as THREE from \"three\";\nimport { ref, nextTick, onUnmounted } from \"vue\";\nimport fs from '@shaders/practice/usingClamp/fragment.glsl'\nimport vs from '@shaders/practice/usingClamp/vertex.glsl'\n\nconst loader = new THREE.TextureLoader();\nconst container = ref(null);\nconst uniforms = {\n\n    u_time: { value: 0.0 },\n    u_mouse: {\n        value: {\n            x: 0.0,\n            y: 0.0\n        }\n    },\n    u_resolution: {\n        value: {\n            x: 0.0,\n            y: 0.0\n        }\n    },\n    u_color: {\n        value: new THREE.Color(0x00fff0)\n    },\n    u_frame: {\n        type: \"i\",\n        value: -1.\n    },\n    iChannel0: { type: 't', value: '' },\n    iChannel1: { type: 't', value: '' },\n};\n\nconst clock = new THREE.Clock();\n\nlet sketch = new Sketch();\n\nsketch.animate = function () {\n    // this.mesh.rotation.x += this.time / 1000;\n    // this.mesh.rotation.y += this.time / 1000;\n    this.render();\n    uniforms.u_time.value = clock.getElapsedTime();\n    uniforms.u_frame.value++;\n    if (this.container.getBoundingClientRect().width > 0)\n        requestAnimationFrame(this.animate.bind(this));\n    else return;\n};\nsketch.move = function (evt: any) {\n    uniforms.u_mouse.value.x = evt.touches ? evt.touches[0].clientX : evt.clientX;\n    uniforms.u_mouse.value.y = evt.touches ? evt.touches[0].clientY : evt.clientY;\n};\n\nif ('ontouchstart' in window) {\n    document.addEventListener('touchmove', sketch.move);\n} else {\n    document.addEventListener('mousemove', sketch.move);\n}\n\nsketch.resize = function () {\n    if (uniforms.u_resolution !== undefined) {\n        uniforms.u_resolution.value.x = this.width;\n        uniforms.u_resolution.value.y = this.height;\n    }\n    uniforms.u_frame.value = 0;\n    this.camera.aspect = this.container.clientWidth / this.container.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n        this.render();\n}\n\nnextTick(() => {\n    const options = {\n        container: container.value || document.body\n    };\n\n    loader.load('/note/images/logo.jpg', (texture: any) => {\n        texture.wrapS = THREE.RepeatWrapping;\n        texture.wrapT = THREE.RepeatWrapping;\n        texture.minFilter = THREE.LinearFilter;\n\n        uniforms.iChannel0.value = texture;\n        uniforms.iChannel1.value = texture;\n\n        sketch.addObject = function () {\n            this.geometry = new THREE.PlaneGeometry(2, 2);\n            this.material = new THREE.ShaderMaterial(\n                {\n                    uniforms: uniforms,\n                    side: THREE.DoubleSide,\n\n                    fragmentShader: fs,\n                    vertexShader: vs,\n                }\n            );\n            this.mesh = new THREE.Mesh(this.geometry, this.material);\n            this.scene.add(this.mesh);\n        }\n        try{\n        sketch.init(options);\n\n        }catch(err){\n            console.log(err)\n        }\n    })\n\n})\n\nonUnmounted(() => {\n    sketch.beforeDestroy();\n})\n\n</script>"],"names":["loader","THREE.TextureLoader","container","ref","uniforms","THREE.Color","clock","THREE.Clock","sketch","Sketch","evt","nextTick","options","texture","THREE.RepeatWrapping","THREE.LinearFilter","THREE.PlaneGeometry","THREE.ShaderMaterial","THREE.DoubleSide","fs","vs","THREE.Mesh","err","onUnmounted"],"mappings":"0wBAYA,MAAAA,EAAA,IAAAC,EACAC,EAAAC,EAAA,IAAA,EACAC,EAAA,CAAiB,OAAA,CAAA,MAAA,CAAA,EAEQ,QAAA,CACZ,MAAA,CACE,EAAA,EACA,EAAA,CACA,CACP,EACJ,aAAA,CACc,MAAA,CACH,EAAA,EACA,EAAA,CACA,CACP,EACJ,QAAA,CACS,MAAA,IAAAC,EAAA,KAAA,CAC0B,EACnC,QAAA,CACS,KAAA,IACC,MAAA,EACC,EACX,UAAA,CAAA,KAAA,IAAA,MAAA,EAAA,EACkC,UAAA,CAAA,KAAA,IAAA,MAAA,EAAA,CACA,EAGtCC,EAAA,IAAAC,EAEA,IAAAC,EAAA,IAAAC,EAEA,OAAAD,EAAA,QAAA,UAAA,CAMI,GAHA,KAAA,OAAA,EACAJ,EAAA,OAAA,MAAAE,EAAA,eAAA,EACAF,EAAA,QAAA,QACA,KAAA,UAAA,sBAAA,EAAA,MAAA,EACI,sBAAA,KAAA,QAAA,KAAA,IAAA,CAAA,MACC,OAAA,EAETI,EAAA,KAAA,SAAAE,EAAA,CACIN,EAAA,QAAA,MAAA,EAAAM,EAAA,QAAAA,EAAA,QAAA,GAAA,QAAAA,EAAA,QACAN,EAAA,QAAA,MAAA,EAAAM,EAAA,QAAAA,EAAA,QAAA,GAAA,QAAAA,EAAA,OAAsE,EAG1E,iBAAA,OACI,SAAA,iBAAA,YAAAF,EAAA,IAAA,EAEA,SAAA,iBAAA,YAAAA,EAAA,IAAA,EAGJA,EAAA,OAAA,UAAA,CACIJ,EAAA,eAAA,SACIA,EAAA,aAAA,MAAA,EAAA,KAAA,MACAA,EAAA,aAAA,MAAA,EAAA,KAAA,QAEJA,EAAA,QAAA,MAAA,EACA,KAAA,OAAA,OAAA,KAAA,UAAA,YAAA,KAAA,UAAA,aACI,KAAA,OAAA,yBACA,KAAA,SAAA,QAAA,KAAA,UAAA,YAAA,KAAA,UAAA,YAAA,EACA,KAAA,OAAA,CAAY,EAGpBO,EAAA,IAAA,CACI,MAAAC,EAAA,CAAgB,UAAAV,EAAA,OAAA,SAAA,IAC2B,EAG3CF,EAAA,KAAA,wBAAAa,GAAA,CACIA,EAAA,MAAAC,EACAD,EAAA,MAAAC,EACAD,EAAA,UAAAE,EAEAX,EAAA,UAAA,MAAAS,EACAT,EAAA,UAAA,MAAAS,EAEAL,EAAA,UAAA,UAAA,CACI,KAAA,SAAA,IAAAQ,EAAA,EAAA,CAAA,EACA,KAAA,SAAA,IAAAC,EAA0B,CACtB,SAAAb,EACI,KAAAc,EACY,eAAAC,EAEI,aAAAC,CACF,CAClB,EAEJ,KAAA,KAAA,IAAAC,EAAA,KAAA,SAAA,KAAA,QAAA,EACA,KAAA,MAAA,IAAA,KAAA,IAAA,CAAwB,EAE5B,GAAA,CACAb,EAAA,KAAAI,CAAA,CAAmB,OAAAU,EAAA,CAGf,QAAA,IAAAA,CAAA,CAAe,CACnB,CAAA,CACH,CAAA,EAILC,EAAA,IAAA,CACIf,EAAA,cAAA,CAAqB,CAAA"}